/*
* Copyright (c) 2007 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource definitions for project UpnpCommand
*
*/


NAME UPCR

// INCLUDES
#include <avkon.rh>
#include <avkon.rsg>
#include <avkon.mbg>
#include <eikon.rh>
#include <upnpframework.loc>
#include "upnpcommand.rh"

// RESOURCE IDENTIFIERS

RESOURCE RSS_SIGNATURE { }
RESOURCE TBUF { buf=""; }

// --------------------------------------------------------------------------
// r_command_drm_file_text
// "Skipping DRM protected files." - note
// Used to indicate that DRM protected files will be skipped.
// --------------------------------------------------------------------------
RESOURCE TBUF r_command_drm_file_text
    { 
    buf = qtn_iupnp_drm_file_text;
    }

// --------------------------------------------------------------------------
// r_command_err_rendering_failed_unknown_text
// "Playback failed on the remote device for unknown error. Try again" - note
// General error when playing from local to remote
// --------------------------------------------------------------------------
RESOURCE TBUF r_command_err_rendering_failed_unknown_text
    { 
    buf = qtn_iupnp_err_rendering_failed_unknown;
    }

// --------------------------------------------------------------------------
// r_command_connecting_wait_note
// A wait note shown when preparing media to be shown on home network
// --------------------------------------------------------------------------
RESOURCE DIALOG r_command_connecting_wait_note
    {
    flags = EAknWaitNoteFlags | EEikDialogFlagWait;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EUPnPBrowseDialogProgressNote;
            control = AVKON_NOTE
                {
                layout         = EWaitLayout;
                singular_label = qtn_iupnp_command_connecting;
                imageid        = EMbmAvkonQgn_note_progress;
                imagemask      = EMbmAvkonQgn_note_progress_mask;
                animation      = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }

// --------------------------------------------------------------------------
// r_command_info_copy_ext_one_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_info_copy_ext_one_text
    {
    buf = qtn_iupnp_info_copy_ext_one;
    }


// --------------------------------------------------------------------------
// r_command_info_copy_ext_many_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_info_copy_ext_many_text
    {
    buf = qtn_iupnp_info_copy_ext_many;
    }

// --------------------------------------------------------------------------
// r_command_info_move_ext_one_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_info_move_ext_one_text
    {
    buf = qtn_iupnp_info_move_ext_one;
    }


// --------------------------------------------------------------------------
// r_command_info_move_ext_many_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_info_move_ext_many_text
    {
    buf = qtn_iupnp_info_move_ext_many;
    }

// --------------------------------------------------------------------------
// r_command_err_general_failure_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_err_general_failure_text
    {
    buf = qtn_iupnp_err_general_failure;
    }

// --------------------------------------------------------------------------
// r_command_err_conn_lost_copy_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_err_conn_lost_copy_text
    {
    buf = qtn_iupnp_err_conn_lost_copy;
    }

// --------------------------------------------------------------------------
// r_command_err_conn_lost_move_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_err_conn_lost_move_text
    {
    buf = qtn_iupnp_err_conn_lost;
    }

// --------------------------------------------------------------------------
// r_command_err_con_failed_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_err_con_failed_text
    {
    buf = qtn_iupnp_err_con_failed;
    }

// --------------------------------------------------------------------------
// r_command_renderer_in_use_text
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_command_renderer_in_use_text
    {
    buf = qtn_iupnp_renderer_in_use;
    }

// End of file
